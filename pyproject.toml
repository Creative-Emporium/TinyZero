# -------------------------------
# build-system
# -------------------------------
[build-system]
requires = [
    "setuptools>=61.0",
    "wheel"
]
build-backend = "setuptools.build_meta"

# -------------------------------
# project (PEP 621 metadata)
# -------------------------------
[project]
name = "verl"
# We'll mark the version as "dynamic" because it's read from the file "verl/version/version" 
# (PEP 621 calls this "dynamic version"). 
# The actual version is specified in the [tool.setuptools.dynamic] section below.
dynamic = ["version"]

description = "veRL: Volcano Engine Reinforcement Learning for LLM"
license = {file = "LICENSE"}  # or "Apache-2.0", if you prefer an SPDX identifier
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.8"

authors = [
  { name = "Bytedance - Seed - MLSys", email = "zhangchi.usc1992@bytedance.com" },
  { name = "Bytedance - Seed - MLSys", email = "gmsheng@connect.hku.hk" },
]

# Dependencies corresponding to install_requires in setup.py
dependencies = [
    "accelerate",
    "codetiming",
    "datasets",
    "dill",
    "hydra-core",
    "numpy",
    "pybind11",
    "transformers<=4.48.1", "ray>=2.40.0,<3", "tensordict>=0.5.0,<0.6", "zmq>=0.0.0,<0.0.1",
]

# Optional dependencies (extras_require in setup.py)
[project.optional-dependencies]
test = [
  "pytest", "yapf"
]

# URLs
[project.urls]
Homepage = "https://github.com/volcengine/verl"

# -------------------------------
# tool.setuptools - Additional config
# -------------------------------
[tool.setuptools]
# True means `setuptools` will attempt to include all relevant files in package_data automatically.
# This corresponds to `include_package_data=True` in setup.py.
include-package-data = true

# We read the version from a file in 'verl/version/version'
[tool.setuptools.dynamic]
version = {file = "verl/version/version"}

# If you need to mimic `package_dir={'': '.'}`:
[tool.setuptools.package-dir]
"" = "."

# If you need to include specific non-Python data (like YAML files or version file):
# This is the rough equivalent of package_data={'': ['version/*'], 'verl': ['trainer/config/*.yaml']}
[tool.setuptools.package-data]
verl = [
  "version/*",
  "trainer/config/*.yaml"
]

[tool.pixi.project]
channels =  ["https://prefix.dev/meta-forge", "conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
verl = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
test = { features = ["test"], solve-group = "default" }

[tool.pixi.tasks]
tiny_zero_ppo = "bash ./scripts/det_scripts/train_ppo.sh"
tiny_zero_grpo = "bash ./scripts/det_scripts/train_grpo.sh"

[tool.pixi.dependencies]
pytorch = { version = "2.4.1", build = "*cuda*" }
flash-attn = ">=2.7.3,<3"
wandb = ">=0.19.4,<0.20"
ipython = ">=8.31.0,<9"
matplotlib = ">=3.10.0,<4"
vllm = "0.6.3.*"
xformers = ">=0.0.29.post1,<0.0.30"
pynvml = ">=12.0.0,<13"
datasets = ">=3.2.0,<4"
triton = ">=3.1.0,<4"

[tool.pixi.system-requirements]
cuda = "12.7"

